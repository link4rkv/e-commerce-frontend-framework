"use strict";

exports.__esModule = true;
exports.convert = convert;
exports.convertFile = convertFile;
exports.exitError = exitError;
exports.stat = exports.readFile = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _chalk = _interopRequireDefault(require("chalk"));

var _util = _interopRequireDefault(require("util"));

var _core = _interopRequireDefault(require("@svgr/core"));

var _pluginSvgo = _interopRequireDefault(require("@svgr/plugin-svgo"));

var _pluginJsx = _interopRequireDefault(require("@svgr/plugin-jsx"));

var _pluginPrettier = _interopRequireDefault(require("@svgr/plugin-prettier"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const readFile = _util.default.promisify(_fs.default.readFile);

exports.readFile = readFile;

const stat = _util.default.promisify(_fs.default.stat);

exports.stat = stat;

function convert(code, config, state) {
  return _core.default.sync(code, config, _extends({}, state, {
    caller: {
      name: '@svgr/cli',
      defaultPlugins: [_pluginSvgo.default, _pluginJsx.default, _pluginPrettier.default]
    }
  }));
}

async function convertFile(filePath, config = {}) {
  const code = await readFile(filePath, 'utf-8');
  return convert(code, config, {
    filePath
  });
}

function exitError(error) {
  console.error(_chalk.default.red(error));
  process.exit(1);
}