import * as React from "react";
import * as PropTypes from "prop-types";
import { ProviderProps as ConstateProps } from "constate";
export interface ProviderProps<S, T> extends ConstateProps<S> {
    theme?: T | ((theme: T) => T);
    children: React.ReactNode;
}
declare class Provider<S, T extends object> extends React.Component<ProviderProps<S, T>> {
    static propTypes: {
        initialState: PropTypes.Requireable<object>;
        onMount: PropTypes.Requireable<(...args: any[]) => any>;
        onUpdate: PropTypes.Requireable<(...args: any[]) => any>;
        onUnmount: PropTypes.Requireable<(...args: any[]) => any>;
        theme: PropTypes.Requireable<object>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        devtools: PropTypes.Requireable<boolean>;
    };
    static defaultProps: {
        initialState: {};
    };
    render(): JSX.Element;
}
export default Provider;
