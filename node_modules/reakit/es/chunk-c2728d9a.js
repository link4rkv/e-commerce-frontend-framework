import { forwardRef, createElement, Component, createRef } from 'react';
import { oneOfType, number, string, bool, oneOf, func, object, arrayOf, node } from 'prop-types';
import { prop, theme } from 'styled-tools';
import { b as bgColorWithProps } from './chunk-bbbc8dce.js';
import { a as hoist } from './chunk-9e6fe658.js';
import styled from './styled.js';
import use from './use.js';
import Box from './Box.js';

var PopoverArrowComponent = function PopoverArrowComponent(props) {
  return createElement(Box, props, createElement("svg", {
    viewBox: "0 0 30 30"
  }, createElement("path", {
    className: "stroke",
    d: "M23.7,27.1L17,19.9C16.5,19.3,15.8,19,15,19s-1.6,0.3-2.1,0.9l-6.6,7.2C5.3,28.1,3.4,29,2,29h26 C26.7,29,24.6,28.1,23.7,27.1z"
  }), createElement("path", {
    className: "fill",
    d: "M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"
  })));
};

var PopoverArrow = styled(hoist(PopoverArrowComponent, Box)).withConfig({
  displayName: "PopoverArrow",
  componentId: "sc-1tkjw1-0"
})(["position:absolute;font-size:30px;width:1em;height:1em;pointer-events:none;background-color:transparent;& .stroke{fill:", ";}& .fill{fill:", ";}[data-placement^=\"top\"] > &{top:100%;transform:rotateZ(180deg);}[data-placement^=\"right\"] > &{right:100%;transform:rotateZ(-90deg);}[data-placement^=\"bottom\"] > &{bottom:100%;transform:rotateZ(360deg);}[data-placement^=\"left\"] > &{left:100%;transform:rotateZ(90deg);}", ";"], prop("strokeColor"), prop("fillColor", bgColorWithProps), theme("PopoverArrow")); // @ts-ignore

PopoverArrow.propTypes = {
  fillColor: string,
  strokeColor: string
};
PopoverArrow.defaultProps = {
  strokeColor: "transparent",
  opaque: true,
  palette: "white"
};
var PopoverArrow$1 = use(PopoverArrow, "div");

export { PopoverArrow$1 as a };
