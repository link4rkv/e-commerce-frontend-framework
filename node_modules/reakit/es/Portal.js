import { c as _inheritsLoose, d as _assertThisInitialized, e as _defineProperty } from './chunk-fb907809.js';
import { forwardRef, createElement, Component, createRef } from 'react';
import { findDOMNode, createPortal } from 'react-dom';
import { theme } from 'styled-tools';
import { a as hoist } from './chunk-9e6fe658.js';
import styled from './styled.js';
import use from './use.js';
import Box from './Box.js';
import 'styled-components';
import 'reuse';
import '@emotion/is-prop-valid';
import 'prop-types';
import './chunk-bbbc8dce.js';
import './chunk-a7ce379e.js';

var PortalComponent =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(PortalComponent, _React$Component);

  function PortalComponent() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      wrapper: null
    });

    return _this;
  }

  var _proto = PortalComponent.prototype;

  _proto.componentDidMount = function componentDidMount() {
    var wrapper = document.createElement("div");
    document.body.appendChild(wrapper);
    this.setState({
      wrapper: wrapper
    });
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    var wrapper = this.state.wrapper;

    if (wrapper) {
      document.body.removeChild(wrapper);
    }
  };

  _proto.render = function render() {
    var wrapper = this.state.wrapper;

    if (wrapper) {
      return createPortal(createElement(Box, this.props), wrapper);
    }

    return null;
  };

  return PortalComponent;
}(Component);

var Portal = styled(hoist(PortalComponent, Box)).withConfig({
  displayName: "Portal",
  componentId: "sc-1anvbga-0"
})(["", ";"], theme("Portal"));
var Portal$1 = use(Portal, "div");

export default Portal$1;
