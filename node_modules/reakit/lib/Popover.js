'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var __chunk_1 = require('./chunk-582bef72.js');
var React = require('react');
var ReactDOM = require('react-dom');
var PropTypes = require('prop-types');
var styledTools = require('styled-tools');
var s = _interopDefault(require('styled-selector'));
var Popper = _interopDefault(require('popper.js'));
var __chunk_4 = require('./chunk-5814b5fa.js');
var styled = require('./styled.js');
var use = require('./use.js');
var Hidden = require('./Hidden.js');
var __chunk_9 = require('./chunk-a7f7ea20.js');
var __chunk_5 = require('./chunk-25591e69.js');
var __chunk_6 = require('./chunk-9ddd950d.js');
var __chunk_7 = require('./chunk-2aaf90c8.js');
require('styled-components');
require('reuse');
require('./chunk-b4ae9232.js');
require('./chunk-f0c301b2.js');
require('./Box.js');
require('@emotion/is-prop-valid');
require('constate');

var PopoverComponent =
/*#__PURE__*/
function (_React$Component) {
  __chunk_1._inheritsLoose(PopoverComponent, _React$Component);

  function PopoverComponent() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "state", {
      placement: _this.props.placement,
      translateX: undefined,
      translateY: undefined,
      originX: undefined,
      originY: undefined
    });

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "popper", void 0);

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "getPopover", function () {
      return ReactDOM.findDOMNode(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)));
    });

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "modifier", function (data) {
      var placement = data.placement,
          offsets = data.offsets,
          arrowElement = data.arrowElement,
          arrowStyles = data.arrowStyles;
      var reference = offsets.reference,
          popper = offsets.popper;

      var _placement$split = placement.split("-"),
          position = _placement$split[0];

      var isVertical = ["top", "bottom"].indexOf(position) >= 0;
      var referenceCenter = isVertical ? reference.width / 2 : reference.height / 2;
      var side = isVertical ? "left" : "top";
      var sideValue = referenceCenter - popper[side];

      if (arrowElement) {
        var top = arrowStyles.top,
            left = arrowStyles.left;
        arrowElement.style.top = isVertical ? "" : top + "px";
        arrowElement.style.left = isVertical ? left + "px" : "";
      }

      _this.setState({
        originX: isVertical ? sideValue + "px - 50%" : 0,
        originY: !isVertical ? sideValue + "px - 50%" : 0,
        translateX: Math.round(popper.left),
        translateY: Math.round(popper.top),
        placement: data.placement
      });

      return data;
    });

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "getOptions", function () {
      var _this$props = _this.props,
          placement = _this$props.placement,
          flip = _this$props.flip,
          shift = _this$props.shift;

      var popover = _this.getPopover();

      var arrow = popover.querySelector(s(__chunk_9.PopoverArrow));
      return {
        placement: placement,
        modifiers: {
          hide: {
            enabled: false
          },
          applyStyle: {
            enabled: false
          },
          arrow: arrow ? {
            enabled: !!arrow,
            element: arrow
          } : undefined,
          flip: {
            enabled: flip,
            padding: 16
          },
          shift: {
            enabled: shift
          },
          offset: {
            offset: "0, " + _this.props.gutter
          },
          setState: {
            order: 900,
            enabled: true,
            fn: _this.modifier
          }
        }
      };
    });

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "initPopper", function () {
      if (!_this.popper) {
        var popover = _this.getPopover();

        if (popover.parentNode) {
          _this.popper = new Popper(popover.parentNode, popover, _this.getOptions());
        }
      }
    });

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "destroyPopper", function () {
      if (_this.popper) {
        _this.popper.destroy();

        _this.popper = undefined;
      }
    });

    return _this;
  }

  var _proto = PopoverComponent.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.initPopper();
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.destroyPopper();
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (prevProps.visible !== this.props.visible || prevProps.placement !== this.props.placement || prevProps.children !== this.props.children) {
      this.destroyPopper();
      this.initPopper();
    }
  };

  _proto.getDefaultPlacement = function getDefaultPlacement() {
    var placement = this.state.placement;

    if (placement) {
      return placement.replace(/-.+$/, "");
    }

    return undefined;
  };

  _proto.render = function render() {
    var defaultPlacement = this.getDefaultPlacement();
    return React.createElement(Hidden.default, __chunk_1._extends({
      id: this.props.popoverId
    }, this.state, {
      "data-placement": this.state.placement,
      defaultSlide: defaultPlacement,
      defaultExpand: defaultPlacement,
      slideOffset: this.props.gutter
    }, this.props, {
      unmount: false
    }));
  };

  return PopoverComponent;
}(React.Component);

var Popover = styled.default(__chunk_4.hoist(PopoverComponent, Hidden.default)).withConfig({
  displayName: "Popover",
  componentId: "s6tfv8-0"
})(["position:absolute;top:0;left:0;user-select:auto;cursor:auto;z-index:999;", ";"], styledTools.theme("Popover")); // @ts-ignore

Popover.propTypes = {
  placement: PropTypes.oneOf(["auto", "top", "right", "bottom", "left", "top-start", "right-start", "bottom-start", "left-start", "top-end", "right-end", "bottom-end", "left-end"]),
  flip: PropTypes.bool,
  shift: PropTypes.bool,
  gutter: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  popoverId: PropTypes.string
};
Popover.defaultProps = {
  role: "group",
  placement: "bottom",
  hideOnEsc: true,
  flip: true,
  shift: true,
  gutter: 12,
  opaque: true,
  palette: "white"
};
var Popover$1 = use.default(Popover, "div");

var id = -1;

var uniqueId = function uniqueId(prefix) {
  id += 1;
  return prefix ? "" + prefix + id : "" + id;
};

var onMount = function onMount(_ref) {
  var setState = _ref.setState;
  setState({
    popoverId: uniqueId("popover")
  });
};

var PopoverContainer = function PopoverContainer(props) {
  return React.createElement(__chunk_6.HiddenContainer, __chunk_1._extends({}, props, {
    onMount: __chunk_5.callAll(onMount, props.onMount)
  }));
};

var PopoverToggleComponent = function PopoverToggleComponent(props) {
  return React.createElement(__chunk_7.HiddenToggle, __chunk_1._extends({
    "aria-expanded": props.visible,
    "aria-controls": props.popoverId,
    "aria-haspopup": true
  }, props));
};

var PopoverToggle = styled.default(__chunk_4.hoist(PopoverToggleComponent, __chunk_7.HiddenToggle)).withConfig({
  displayName: "PopoverToggle",
  componentId: "sc-1kg8ilz-0"
})(["", ";"], styledTools.theme("PopoverToggle")); // @ts-ignore

PopoverToggle.propTypes = {
  popoverId: PropTypes.string,
  visible: PropTypes.bool
};
var PopoverToggle$1 = use.default(PopoverToggle, "button");

var PopoverShowComponent = function PopoverShowComponent(props) {
  return React.createElement(__chunk_7.HiddenShow, __chunk_1._extends({
    "aria-expanded": props.visible,
    "aria-controls": props.popoverId,
    "aria-haspopup": true
  }, props));
};

var PopoverShow = styled.default(__chunk_4.hoist(PopoverShowComponent, __chunk_7.HiddenShow)).withConfig({
  displayName: "PopoverShow",
  componentId: "fiwcg2-0"
})(["", ";"], styledTools.theme("PopoverShow")); // @ts-ignore

PopoverShow.propTypes = {
  popoverId: PropTypes.string,
  visible: PropTypes.bool
};
var PopoverShow$1 = use.default(PopoverShow, "button");

var PopoverHideComponent = function PopoverHideComponent(props) {
  return React.createElement(__chunk_7.HiddenHide, __chunk_1._extends({
    "aria-expanded": props.visible,
    "aria-controls": props.popoverId,
    "aria-haspopup": true
  }, props));
};

var PopoverHide = styled.default(__chunk_4.hoist(PopoverHideComponent, __chunk_7.HiddenHide)).withConfig({
  displayName: "PopoverHide",
  componentId: "sc-1dmx1zw-0"
})(["", ";"], styledTools.theme("PopoverHide")); // @ts-ignore

PopoverHide.propTypes = {
  popoverId: PropTypes.string,
  visible: PropTypes.bool
};
var PopoverHide$1 = use.default(PopoverHide, "button");

var Popover$2 = Object.assign(Popover$1, {
  Arrow: __chunk_9.PopoverArrow,
  Container: PopoverContainer,
  Toggle: PopoverToggle$1,
  Show: PopoverShow$1,
  Hide: PopoverHide$1
});

exports.default = Popover$2;
