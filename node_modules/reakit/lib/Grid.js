'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var PropTypes = require('prop-types');
var styledTools = require('styled-tools');
var __chunk_3 = require('./chunk-b4ae9232.js');
var styled = require('./styled.js');
var use = require('./use.js');
var Box = require('./Box.js');
require('./chunk-f0c301b2.js');
require('styled-components');
require('reuse');
require('@emotion/is-prop-valid');
require('./chunk-582bef72.js');
require('react');

var Grid = styled.default(Box.default).withConfig({
  displayName: "Grid",
  componentId: "sc-1bcnzje-0"
})(["display:grid;&&&{", " ", " ", " ", " ", " ", " ", " ", "}", ";"], __chunk_3.bool("grid-auto-flow", ["row", "column", "dense"]), __chunk_3.value("grid-gap", "gap"), __chunk_3.value("grid-template", "template"), __chunk_3.value("grid-template-areas", "templateAreas"), __chunk_3.value("grid-template-columns", "templateColumns"), __chunk_3.value("grid-template-rows", "templateRows"), __chunk_3.value("grid-auto-columns", "autoColumns"), __chunk_3.value("grid-auto-rows", "autoRows"), styledTools.theme("Grid"));
var valueType = PropTypes.oneOfType([PropTypes.string, PropTypes.number]); // @ts-ignore

Grid.propTypes = {
  row: PropTypes.bool,
  column: PropTypes.bool,
  dense: PropTypes.bool,
  gap: valueType,
  template: valueType,
  templateAreas: valueType,
  templateColumns: valueType,
  templateRows: valueType,
  autoColumns: valueType,
  autoRows: valueType
};
var Grid$1 = use.default(Grid, "div");

var GridItem = styled.default(Box.default).withConfig({
  displayName: "GridItem",
  componentId: "sc-1q0uic8-0"
})(["&&&{", ";", ";", ";", ";", ";", ";", ";}", ";"], __chunk_3.value("grid-area", "area"), __chunk_3.value("grid-column", "column"), __chunk_3.value("grid-row", "row"), __chunk_3.value("grid-column-start", "columnStart"), __chunk_3.value("grid-column-end", "columnEnd"), __chunk_3.value("grid-row-start", "rowStart"), __chunk_3.value("grid-row-end", "rowEnd"), styledTools.theme("GridItem"));
var valueType$1 = PropTypes.oneOfType([PropTypes.string, PropTypes.number]); // @ts-ignore

GridItem.propTypes = {
  area: valueType$1,
  column: valueType$1,
  row: valueType$1,
  columnStart: valueType$1,
  columnEnd: valueType$1,
  rowStart: valueType$1,
  rowEnd: valueType$1
};
var GridItem$1 = use.default(GridItem, "div");

var index = Object.assign(Grid$1, {
  Item: GridItem$1
});

exports.default = index;
