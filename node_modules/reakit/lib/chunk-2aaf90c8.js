'use strict';

var __chunk_1 = require('./chunk-582bef72.js');
var React = require('react');
var PropTypes = require('prop-types');
var styledTools = require('styled-tools');
var __chunk_4 = require('./chunk-5814b5fa.js');
var __chunk_5 = require('./chunk-25591e69.js');
var styled = require('./styled.js');
var use = require('./use.js');
var Box = require('./Box.js');

var HiddenHideComponent = function HiddenHideComponent(_ref) {
  var onClick = _ref.onClick,
      props = __chunk_1._objectWithoutPropertiesLoose(_ref, ["onClick"]);

  return React.createElement(Box.default, __chunk_1._extends({
    onClick: __chunk_5.callAll(props.hide, onClick)
  }, props));
};

var HiddenHide = styled.default(__chunk_4.hoist(HiddenHideComponent, Box.default)).withConfig({
  displayName: "HiddenHide",
  componentId: "nbepnv-0"
})(["", ";"], styledTools.theme("HiddenHide")); // @ts-ignore

HiddenHide.propTypes = {
  hide: PropTypes.func.isRequired,
  onClick: PropTypes.func
};
var HiddenHide$1 = use.default(HiddenHide, "button");

var HiddenShowComponent = function HiddenShowComponent(_ref) {
  var onClick = _ref.onClick,
      props = __chunk_1._objectWithoutPropertiesLoose(_ref, ["onClick"]);

  return React.createElement(Box.default, __chunk_1._extends({
    onClick: __chunk_5.callAll(props.show, onClick)
  }, props));
};

var HiddenShow = styled.default(__chunk_4.hoist(HiddenShowComponent, Box.default)).withConfig({
  displayName: "HiddenShow",
  componentId: "w6ef6h-0"
})(["", ";"], styledTools.theme("HiddenShow")); // @ts-ignore

HiddenShow.propTypes = {
  show: PropTypes.func.isRequired,
  onClick: PropTypes.func
};
var HiddenShow$1 = use.default(HiddenShow, "button");

var HiddenToggleComponent = React.forwardRef(function (_ref, ref) {
  var onClick = _ref.onClick,
      props = __chunk_1._objectWithoutPropertiesLoose(_ref, ["onClick"]);

  return React.createElement(Box.default, __chunk_1._extends({
    onClick: __chunk_5.callAll(props.toggle, onClick)
  }, props, {
    ref: ref
  }));
});
var HiddenToggle = styled.default(__chunk_4.hoist(HiddenToggleComponent, Box.default)).withConfig({
  displayName: "HiddenToggle",
  componentId: "kd7ngs-0"
})(["", ";"], styledTools.theme("HiddenToggle")); // @ts-ignore

HiddenToggle.propTypes = {
  toggle: PropTypes.func.isRequired,
  onClick: PropTypes.func
};
var HiddenToggle$1 = use.default(HiddenToggle, "button");

exports.HiddenHide = HiddenHide$1;
exports.HiddenShow = HiddenShow$1;
exports.HiddenToggle = HiddenToggle$1;
